from catboost import Pool
import pandas as pd

DEFAULT_CATEGORICAL_FEATURES = [
    'Machine',
    'SizeOfOptionalHeader',
    'Characteristics',
    'MajorLinkerVersion',
    'MinorLinkerVersion',
    'AddressOfEntryPoint',
    'BaseOfCode',
    'BaseOfData',
    'ImageBase',
    'SectionAlignment',
    'FileAlignment',
    'MajorOperatingSystemVersion',
    'MinorOperatingSystemVersion',
    'MajorImageVersion',
    'MinorImageVersion',
    'MajorSubsystemVersion',
    'MinorSubsystemVersion',
    'CheckSum',
    'Subsystem',
    'DllCharacteristics',
    'SectionsNb',
    'ImportsNbDLL',
    'ImportsNb',
    'ImportsNbOrdinal',
    'ExportNb',
    'ResourcesNb',
]
DEFAULT_NUMERIC_FEATURES = [
    'SizeOfCode',
    'SizeOfInitializedData',
    'SizeOfUninitializedData',
    'SizeOfImage',
    'SizeOfHeaders',
    'SizeOfStackReserve',
    'SizeOfStackCommit',
    'SizeOfHeapReserve',
    'SizeOfHeapCommit',
    'SectionsMeanEntropy',
    'SectionsMinEntropy',
    'SectionsMaxEntropy',
    'SectionsMeanRawsize',
    'SectionsMinRawsize',
    'SectionMaxRawsize',
    'SectionsMeanVirtualsize',
    'SectionsMinVirtualsize',
    'SectionMaxVirtualsize',
    'ResourcesMeanEntropy',
    'ResourcesMinEntropy',
    'ResourcesMaxEntropy',
    'ResourcesMeanSize',
    'ResourcesMinSize',
    'ResourcesMaxSize',
    'LoadConfigurationSize',
    'VersionInformationSize',
]
DEFAULT_TARGET = 'legitimate'


def df_to_pool(df,
               numeric_features=DEFAULT_NUMERIC_FEATURES,
               categorical_features=DEFAULT_CATEGORICAL_FEATURES,
               target_column=DEFAULT_TARGET,
               ):
    columns = numeric_features + categorical_features
    target = None
    if target_column in df.columns:
        target = df[target_column]
    df = df[columns].copy()
    for col in categorical_features:
        df.loc[:, col] = df[col].fillna(-1).apply(lambda x: str(x))
    return Pool(
            df,
            label=target,
            cat_features=categorical_features,
        )


def json_to_pool(json_data):
    df = pd.DataFrame(json_data, index=[0])
    return df_to_pool(df)
