import numpy as np
import seaborn as sns
import pandas as pd
from matplotlib import pyplot as plt
from sklearn.metrics import roc_curve, roc_auc_score


def plot_roc_curve(true,
                   pred,
                   name,
                   weights=None,
                   label='',
                   color='darkorange',
                   ax=None,
):
    if ax is None:
        ax = plt.gca()
    fpr, tpr, thr = roc_curve(true, pred, sample_weight=weights)
    lw = 2
    ax.plot(fpr,
            tpr,
            color=color,
            lw=lw,
            label=('ROC {} curve (area = {:0.3f})'
                   .format(label, roc_auc_score(true,
                                                pred,
                                                sample_weight=weights))))
    ax.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')
    ax.set_xlim([0.0, 1.0])
    ax.set_ylim([0.0, 1.05])
    ax.set_xlabel('False Positive Rate')
    ax.set_ylabel('True Positive Rate')
    ax.set_title(name)
    ax.legend(loc="lower right")


def draw_histograms_by_target(df, target):
    for col in df.columns:
        if col ==  target:
            continue
        sns.countplot( x = col, hue = target, data = df)
        plt.figure()

def draw_corr_matrix(corr, annot=False):
    mask = np.zeros_like(corr)
    mask[np.triu_indices_from(mask)] = True
    f, ax = plt.subplots(figsize=(15, 15))
    cmap = sns.diverging_palette(220, 10, as_cmap=True)
    sns.heatmap(corr, mask=mask, cmap=cmap, center=0, annot = annot, fmt=".3f")
    bottom, top = ax.get_ylim()
    ax.set_ylim(bottom + 0.5, top - 0.5)